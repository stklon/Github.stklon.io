<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://stklon.github.io</id>
    <title>小小白的bolg</title>
    <updated>2019-10-16T05:06:33.035Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://stklon.github.io"/>
    <link rel="self" href="https://stklon.github.io/atom.xml"/>
    <subtitle>学习永无止境</subtitle>
    <logo>https://stklon.github.io/images/avatar.png</logo>
    <icon>https://stklon.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, 小小白的bolg</rights>
    <entry>
        <title type="html"><![CDATA[JavaScript自学（1）]]></title>
        <id>https://stklon.github.io/post/javascript-zi-xue-1</id>
        <link href="https://stklon.github.io/post/javascript-zi-xue-1">
        </link>
        <updated>2019-10-12T15:54:04.000Z</updated>
        <content type="html"><![CDATA[<p>在js中可以用let来声明变量。<br>
变量需要有一下两种重要性：<br>
（1）：变量要有意义，且不要用数字开头，其中不能有空格和——。<br>
（2）：命名的方法是：第一个单词小写，后面的单词的首字母大写。<br>
在js中有五种基本类型：string，unmber，boolean，null，undefined。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python自学（3）]]></title>
        <id>https://stklon.github.io/post/python-zi-xue-3</id>
        <link href="https://stklon.github.io/post/python-zi-xue-3">
        </link>
        <updated>2019-10-12T15:37:46.000Z</updated>
        <content type="html"><![CDATA[<p>在vs code中python的运行始终还是没有很方便，可能是我不太熟悉vs code，但是并不影响我对它的喜欢。vs code天下第一。我以后会回来的。<br>
好吧，回到正题，今天学到的时关于py的一点基本知识，和java，c有很不一样的地方，总体来说是变的更加容易了，以下就好好的聊一聊。<br>
首先是定义变量，在py中不用刻意去定义，也就是不用像c中 int i；什么的，在py中直接可以对变量赋值，并且这个是变量，而不是常量，也就是说，在后续中可以直接对变量进行再次赋值而进行值的变换，而不是像在Java中还要进行计算得到变换。<br>
其次在py中，/表示做除法，//表示取整数，%表示取余数，*表示乘法，**表示取幂。<br>
对于其他类型转换，在整数后赋值浮点数后，变量就变换位浮点数，其他的可以推理。<br>
然后第一个图形函数turtle，首先调用它，import turtle<br>
其中要注意的是这几个<br>
turtle.circle(100)半径100的圆圈<br>
turtle.pendown()表示为显示笔记penup表示为不显示。<br>
在python2中没有false和true，只有用0和1表示。<br>
在python3中就可以有了，但是也就是表示0和1，甚至可以直接和数字相加。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python自学(2)]]></title>
        <id>https://stklon.github.io/post/python-zi-xue-2</id>
        <link href="https://stklon.github.io/post/python-zi-xue-2">
        </link>
        <updated>2019-10-09T14:51:50.000Z</updated>
        <content type="html"><![CDATA[<p>就上午完成1后，晚上继续开始第二次<br>
本次题目为<br>
一个数加上100，为一个完全平方数，再加上168为又是一个完全平方数，求这个数？<br>
首先按照一般方法：<br>
调用import中单math函数<br>
用for循环1到10000，然后<br>
用x平方，y平方来代替n+100，和n+100+168，最后在if中判断一下是否相等即可输出，源代码如下：</p>
<h1 id="import-math">import math</h1>
<h1 id="for-i-in-range10000">for i in range(10000):</h1>
<h1 id="xint-mathsqrti100">x=int (math.sqrt(i+100))</h1>
<h1 id="yintmathsqrti268">y=int(math.sqrt(i+268))</h1>
<h1 id="ifxxi100andyyi268">if(x<em>x==i+100)and(y</em>y==i+268):</h1>
<h1 id="printi">print(i)</h1>
<p>答案为21、261、1581<br>
还有宁一种方法，下次再说</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python自学（1）]]></title>
        <id>https://stklon.github.io/post/python-zi-xue-1</id>
        <link href="https://stklon.github.io/post/python-zi-xue-1">
        </link>
        <updated>2019-10-08T21:40:22.000Z</updated>
        <content type="html"><![CDATA[<p>今天写了一个关于python的代码，虽然直接就是照着代码敲的，但是还是很有收获。<br>
第一点：<br>
我用的是vs code所以先要解决关于vs code的问题，也就是怎么样用vs code写python<br>
首先打开vs code，然后在extensions中安装python的扩展，就是直接正在上面的输入栏中输入python,然后点击第一个安装（install）就可以了，安装后才能写python并且运行，当然，如果觉得麻烦，可以在建立的python后点击调试，在vs code的右下方就会显示下载python的扩展，直接点击install就行，安装后点击调试，选项栏中选择有python的哪一项即可，得到的结果都在调试控制台中。<br>
第二点：本次写的是把1到4组成3个不相等的，并列出来。<br>
首先是遍历，在除去相同的即可。<br>
total=0<br>
for i in range(1,5):<br>
for j in range(1,5):<br>
for k in range(1,5):<br>
if((i!=j)and(j!=k)and(k!=i)):print(i,j,k) total+=1<br>
print(total)<br>
但是却有语法错误，等下次的时候我就会把这个错误找出来。<br>
第二个就是python的特长，调用函数。<br>
import itertools<br>
sum2=0<br>
a=[1,2,3,4]<br>
for i in itertools.permutations(a,3):<br>
print(i)<br>
sum2+=1<br>
print(sum2)<br>
即可得到24个排列数。<br>
——————————————————————————————————<br>
对于上面的问题就是，python严格要求格式将上面换为：<br>
total=0<br>
for i in range(1,5):<br>
for j in range(1,5):<br>
for k in range(1,5):<br>
if((i!=j)and(j!=k)and(k!=i)):<br>
print(i,j,k)<br>
total+=1<br>
print(total)<br>
即可得到正确的答案，所谓的语法错误就是格式错误，还有大部分python找不到错误时，检查一下格式问题。</p>
<p>——————————————————————————————————<br>
真正的开始写了，加油，小小白。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[这是我第一个bolg]]></title>
        <id>https://stklon.github.io/post/zhe-shi-wo-di-yi-ge-bolg</id>
        <link href="https://stklon.github.io/post/zhe-shi-wo-di-yi-ge-bolg">
        </link>
        <updated>2019-10-06T10:52:09.000Z</updated>
        <content type="html"><![CDATA[<p>第一个bolg代表着我以后会一直写一些东西，比如学习的一些问题的解决，还有生活的一些感想。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://stklon.github.io/post/hello-gridea</id>
        <link href="https://stklon.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>